{"version":3,"sources":["es6-promise.js","polyfills.js","stackframe.js","bundle.js","stacktrace-gps.js"],"names":["global","factory","exports","module","define","amd","ES6Promise","this","objectOrFunction","x","isFunction","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useNextTick","process","nextTick","flush","useVertxTimer","vertxNext","useMutationObserver","iterations","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","useSetTimeout","globalSetTimeout","setTimeout","i","len","callback","queue","arg","undefined","attemptVertx","r","require","vertx","runOnLoop","runOnContext","e","then","onFulfillment","onRejection","_arguments","arguments","parent","child","constructor","noop","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve","object","Constructor","promise","_resolve","selfFulfillment","TypeError","cannotReturnOwn","getThen","error","GET_THEN_ERROR","tryThen","value","fulfillmentHandler","rejectionHandler","call","handleForeignThenable","thenable","sealed","fulfill","reason","_reject","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","then$$","publishRejection","_onerror","publish","PENDING","_subscribers","length","subscribers","settled","detail","ErrorObject","tryCatch","TRY_CATCH_ERROR","hasCallback","succeeded","failed","initializePromise","resolver","nextId","id","Enumerator","input","_instanceConstructor","isArray","_input","_remaining","Array","_enumerate","validationError","Error","all","entries","race","reject","_","needsResolver","needsNew","Promise","polyfill","local","self","Function","P","promiseToString","Object","prototype","toString","cast","_isArray","scheduleFlush","browserWindow","window","browserGlobal","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","Math","random","substring","_eachEntry","entry","c","resolve$$","_then","_settledAt","_willSettleAt","state","enumerator","_setScheduler","_setAsap","_asap","catch","root","StackFrame","_isNumber","n","isNaN","parseFloat","isFinite","_capitalize","str","toUpperCase","_getter","p","obj","props","booleanProps","concat","numericProps","stringProps","arrayProps","hasOwnProperty","getArgs","args","setArgs","v","getEvalOrigin","evalOrigin","setEvalOrigin","functionName","getFunctionName","join","fileName","getFileName","lineNumber","getLineNumber","columnNumber","getColumnNumber","Boolean","j","Number","k","String","SourceMap","modules","__webpack_require__","moduleId","installedModules","loaded","m","SourceMapConsumer","aSourceMap","sourceMap","JSON","parse","replace","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","version","util","getArg","sources","names","sourceRoot","sourcesContent","mappings","file","_version","map","normalize","source","isAbsolute","relative","_names","ArraySet","fromArray","_sources","_mappings","Mapping","generatedLine","generatedColumn","originalLine","originalColumn","name","lastOffset","line","column","_sections","s","url","offset","offsetLine","offsetColumn","generatedOffset","consumer","binarySearch","base64VLQ","quickSort","fromSourceMap","__generatedMappings","defineProperty","get","_parseMappings","__originalMappings","_charIsMappingSeparator","aStr","index","charAt","aSourceRoot","GENERATED_ORDER","ORIGINAL_ORDER","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","eachMapping","aCallback","aContext","aOrder","context","order","_generatedMappings","_originalMappings","mapping","at","forEach","allGeneratedPositionsFor","aArgs","needle","has","indexOf","_findMapping","compareByOriginalPositions","push","lastColumn","create","smc","toArray","_sourceRoot","_generateSourcesContent","_file","generatedMappings","slice","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","segment","end","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","temp","originalMappings","decode","rest","compareByGeneratedPositionsDeflated","aNeedle","aMappings","aLineName","aColumnName","aComparator","aBias","search","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","originalPositionFor","hasContentsOfAllSources","size","some","sc","sourceContentFor","aSource","nullOnMissing","urlParse","fileUriAbsPath","scheme","path","generatedPositionFor","sectionIndex","section","cmp","bias","every","content","generatedPosition","ret","sectionMappings","add","adjustedMapping","aName","aDefaultValue","aUrl","match","urlRegexp","auth","host","port","urlGenerate","aParsedUrl","aPath","part","parts","split","up","splice","aRoot","aPathUrl","aRootUrl","dataUrlRegexp","joined","level","lastIndexOf","substr","identity","toSetString","isProtoString","fromSetString","charCodeAt","mappingA","mappingB","onlyCompareOriginal","onlyCompareGenerated","strcmp","aStr1","aStr2","compareByGeneratedPositionsInflated","supportsNullProto","recursiveSearch","aLow","aHigh","aHaystack","aCompare","mid","floor","_array","_set","aArray","aAllowDuplicates","set","getOwnPropertyNames","sStr","isDuplicate","idx","aIdx","toVLQSigned","aValue","fromVLQSigned","isNegative","shifted","base64","VLQ_BASE_SHIFT","VLQ_BASE","VLQ_BASE_MASK","VLQ_CONTINUATION_BIT","encode","digit","encoded","vlq","aIndex","aOutParam","continuation","strLen","result","shift","intToCharMap","number","charCode","bigA","bigZ","littleA","littleZ","zero","nine","plus","slash","littleOffset","numberOffset","swap","ary","y","randomIntInRange","low","high","round","doQuickSort","comparator","pivotIndex","pivot","q","StackTraceGPS","_xdr","req","XMLHttpRequest","open","onerror","onreadystatechange","readyState","status","responseText","send","_atob","b64str","atob","_parseJson","string","_findFunctionName","syntaxes","lines","code","maxLines","min","commentPos","exec","_ensureSupportedEnvironment","_ensureStackFrameIsLegit","stackframe","_findSourceMappingURL","_extractLocationInfoFromSourceMapSource","sourceMapConsumer","sourceCache","loc","mappedSource","opts","sourceMapConsumerCache","ajax","_get","location","isDataUrl","offline","supportedEncodingRegexp","sourceMapStart","encodedSource","xhrPromise","method","bind","_getSourceMapConsumer","sourceMappingURL","defaultSourceRoot","sourceMapConsumerPromise","sourceMapSource","pinpoint","getMappedLocation","mappedStackFrame","resolveMappedStackFrame","findFunctionName","guessedFunctionName","test"],"mappings":"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","file":"stacktrace-gps-with-polyfills.min.js","sourcesContent":["/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   3.3.1\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  return typeof x === 'function' || typeof x === 'object' && x !== null;\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (!Array.isArray) {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n} else {\n  _isArray = Array.isArray;\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  return function () {\n    vertxNext(flush);\n  };\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  _resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        _resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      _reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      _reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    _reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return _resolve(promise, value);\n    }, function (reason) {\n      return _reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$) {\n  if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$ === GET_THEN_ERROR) {\n      _reject(promise, GET_THEN_ERROR.error);\n    } else if (then$$ === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$)) {\n      handleForeignThenable(promise, maybeThenable, then$$);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction _resolve(promise, value) {\n  if (promise === value) {\n    _reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction _reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      _reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      _resolve(promise, value);\n    } else if (failed) {\n      _reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      _reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      _resolve(promise, value);\n    }, function rejectPromise(reason) {\n      _reject(promise, reason);\n    });\n  } catch (e) {\n    _reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this._input = input;\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate();\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    _reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nEnumerator.prototype._enumerate = function () {\n  var length = this.length;\n  var _input = this._input;\n\n  for (var i = 0; this._state === PENDING && i < length; i++) {\n    this._eachEntry(_input[i], i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$ = c.resolve;\n\n  if (resolve$$ === resolve) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$) {\n        return resolve$$(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$(entry), i);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      _reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  _reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve;\nPromise.reject = reject;\nPromise._setScheduler = setScheduler;\nPromise._setAsap = setAsap;\nPromise._asap = asap;\n\nPromise.prototype = {\n  constructor: Promise,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nfunction polyfill() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise;\n}\n\npolyfill();\n// Strange compat..\nPromise.polyfill = polyfill;\nPromise.Promise = Promise;\n\nreturn Promise;\n\n})));\n//# sourceMappingURL=es6-promise.map","(function() {\n    if (typeof Promise === 'undefined') {\n        ES6Promise.polyfill();\n    }\n})();\n","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str[0].toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function () {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    function StackFrame(obj) {\n        if (obj instanceof Object) {\n            var props = booleanProps.concat(numericProps.concat(stringProps.concat(arrayProps)));\n            for (var i = 0; i < props.length; i++) {\n                if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {\n                    this['set' + _capitalize(props[i])](obj[props[i]]);\n                }\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function () {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function (v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function () {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function (p) {\n            return function (v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function (p) {\n            return function (v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function (p) {\n            return function (v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","var SourceMap =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\tvar util = __webpack_require__(1);\n\tvar binarySearch = __webpack_require__(2);\n\tvar ArraySet = __webpack_require__(3).ArraySet;\n\tvar base64VLQ = __webpack_require__(4);\n\tvar quickSort = __webpack_require__(6).quickSort;\n\n\tfunction SourceMapConsumer(aSourceMap) {\n\t  var sourceMap = aSourceMap;\n\t  if (typeof aSourceMap === 'string') {\n\t    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n\t  }\n\n\t  return sourceMap.sections != null\n\t    ? new IndexedSourceMapConsumer(sourceMap)\n\t    : new BasicSourceMapConsumer(sourceMap);\n\t}\n\n\tSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n\t  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n\t}\n\n\t/**\n\t * The version of the source mapping spec that we are consuming.\n\t */\n\tSourceMapConsumer.prototype._version = 3;\n\n\t// `__generatedMappings` and `__originalMappings` are arrays that hold the\n\t// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n\t// are lazily instantiated, accessed via the `_generatedMappings` and\n\t// `_originalMappings` getters respectively, and we only parse the mappings\n\t// and create these arrays once queried for a source location. We jump through\n\t// these hoops because there can be many thousands of mappings, and parsing\n\t// them is expensive, so we only want to do it if we must.\n\t//\n\t// Each object in the arrays is of the form:\n\t//\n\t//     {\n\t//       generatedLine: The line number in the generated code,\n\t//       generatedColumn: The column number in the generated code,\n\t//       source: The path to the original source file that generated this\n\t//               chunk of code,\n\t//       originalLine: The line number in the original source that\n\t//                     corresponds to this chunk of generated code,\n\t//       originalColumn: The column number in the original source that\n\t//                       corresponds to this chunk of generated code,\n\t//       name: The name of the original symbol which generated this chunk of\n\t//             code.\n\t//     }\n\t//\n\t// All properties except for `generatedLine` and `generatedColumn` can be\n\t// `null`.\n\t//\n\t// `_generatedMappings` is ordered by the generated positions.\n\t//\n\t// `_originalMappings` is ordered by the original positions.\n\n\tSourceMapConsumer.prototype.__generatedMappings = null;\n\tObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n\t  get: function () {\n\t    if (!this.__generatedMappings) {\n\t      this._parseMappings(this._mappings, this.sourceRoot);\n\t    }\n\n\t    return this.__generatedMappings;\n\t  }\n\t});\n\n\tSourceMapConsumer.prototype.__originalMappings = null;\n\tObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n\t  get: function () {\n\t    if (!this.__originalMappings) {\n\t      this._parseMappings(this._mappings, this.sourceRoot);\n\t    }\n\n\t    return this.__originalMappings;\n\t  }\n\t});\n\n\tSourceMapConsumer.prototype._charIsMappingSeparator =\n\t  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n\t    var c = aStr.charAt(index);\n\t    return c === \";\" || c === \",\";\n\t  };\n\n\t/**\n\t * Parse the mappings in a string in to a data structure which we can easily\n\t * query (the ordered arrays in the `this.__generatedMappings` and\n\t * `this.__originalMappings` properties).\n\t */\n\tSourceMapConsumer.prototype._parseMappings =\n\t  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n\t    throw new Error(\"Subclasses must implement _parseMappings\");\n\t  };\n\n\tSourceMapConsumer.GENERATED_ORDER = 1;\n\tSourceMapConsumer.ORIGINAL_ORDER = 2;\n\n\tSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\n\tSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n\t/**\n\t * Iterate over each mapping between an original source/line/column and a\n\t * generated line/column in this source map.\n\t *\n\t * @param Function aCallback\n\t *        The function that is called with each mapping.\n\t * @param Object aContext\n\t *        Optional. If specified, this object will be the value of `this` every\n\t *        time that `aCallback` is called.\n\t * @param aOrder\n\t *        Either `SourceMapConsumer.GENERATED_ORDER` or\n\t *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n\t *        iterate over the mappings sorted by the generated file's line/column\n\t *        order or the original's source/line/column order, respectively. Defaults to\n\t *        `SourceMapConsumer.GENERATED_ORDER`.\n\t */\n\tSourceMapConsumer.prototype.eachMapping =\n\t  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n\t    var context = aContext || null;\n\t    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n\t    var mappings;\n\t    switch (order) {\n\t    case SourceMapConsumer.GENERATED_ORDER:\n\t      mappings = this._generatedMappings;\n\t      break;\n\t    case SourceMapConsumer.ORIGINAL_ORDER:\n\t      mappings = this._originalMappings;\n\t      break;\n\t    default:\n\t      throw new Error(\"Unknown order of iteration.\");\n\t    }\n\n\t    var sourceRoot = this.sourceRoot;\n\t    mappings.map(function (mapping) {\n\t      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n\t      if (source != null && sourceRoot != null) {\n\t        source = util.join(sourceRoot, source);\n\t      }\n\t      return {\n\t        source: source,\n\t        generatedLine: mapping.generatedLine,\n\t        generatedColumn: mapping.generatedColumn,\n\t        originalLine: mapping.originalLine,\n\t        originalColumn: mapping.originalColumn,\n\t        name: mapping.name === null ? null : this._names.at(mapping.name)\n\t      };\n\t    }, this).forEach(aCallback, context);\n\t  };\n\n\t/**\n\t * Returns all generated line and column information for the original source,\n\t * line, and column provided. If no column is provided, returns all mappings\n\t * corresponding to a either the line we are searching for or the next\n\t * closest line that has any mappings. Otherwise, returns all mappings\n\t * corresponding to the given line and either the column we are searching for\n\t * or the next closest column that has any offsets.\n\t *\n\t * The only argument is an object with the following properties:\n\t *\n\t *   - source: The filename of the original source.\n\t *   - line: The line number in the original source.\n\t *   - column: Optional. the column number in the original source.\n\t *\n\t * and an array of objects is returned, each with the following properties:\n\t *\n\t *   - line: The line number in the generated source, or null.\n\t *   - column: The column number in the generated source, or null.\n\t */\n\tSourceMapConsumer.prototype.allGeneratedPositionsFor =\n\t  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n\t    var line = util.getArg(aArgs, 'line');\n\n\t    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n\t    // returns the index of the closest mapping less than the needle. By\n\t    // setting needle.originalColumn to 0, we thus find the last mapping for\n\t    // the given line, provided such a mapping exists.\n\t    var needle = {\n\t      source: util.getArg(aArgs, 'source'),\n\t      originalLine: line,\n\t      originalColumn: util.getArg(aArgs, 'column', 0)\n\t    };\n\n\t    if (this.sourceRoot != null) {\n\t      needle.source = util.relative(this.sourceRoot, needle.source);\n\t    }\n\t    if (!this._sources.has(needle.source)) {\n\t      return [];\n\t    }\n\t    needle.source = this._sources.indexOf(needle.source);\n\n\t    var mappings = [];\n\n\t    var index = this._findMapping(needle,\n\t                                  this._originalMappings,\n\t                                  \"originalLine\",\n\t                                  \"originalColumn\",\n\t                                  util.compareByOriginalPositions,\n\t                                  binarySearch.LEAST_UPPER_BOUND);\n\t    if (index >= 0) {\n\t      var mapping = this._originalMappings[index];\n\n\t      if (aArgs.column === undefined) {\n\t        var originalLine = mapping.originalLine;\n\n\t        // Iterate until either we run out of mappings, or we run into\n\t        // a mapping for a different line than the one we found. Since\n\t        // mappings are sorted, this is guaranteed to find all mappings for\n\t        // the line we found.\n\t        while (mapping && mapping.originalLine === originalLine) {\n\t          mappings.push({\n\t            line: util.getArg(mapping, 'generatedLine', null),\n\t            column: util.getArg(mapping, 'generatedColumn', null),\n\t            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n\t          });\n\n\t          mapping = this._originalMappings[++index];\n\t        }\n\t      } else {\n\t        var originalColumn = mapping.originalColumn;\n\n\t        // Iterate until either we run out of mappings, or we run into\n\t        // a mapping for a different line than the one we were searching for.\n\t        // Since mappings are sorted, this is guaranteed to find all mappings for\n\t        // the line we are searching for.\n\t        while (mapping &&\n\t               mapping.originalLine === line &&\n\t               mapping.originalColumn == originalColumn) {\n\t          mappings.push({\n\t            line: util.getArg(mapping, 'generatedLine', null),\n\t            column: util.getArg(mapping, 'generatedColumn', null),\n\t            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n\t          });\n\n\t          mapping = this._originalMappings[++index];\n\t        }\n\t      }\n\t    }\n\n\t    return mappings;\n\t  };\n\n\texports.SourceMapConsumer = SourceMapConsumer;\n\n\t/**\n\t * A BasicSourceMapConsumer instance represents a parsed source map which we can\n\t * query for information about the original file positions by giving it a file\n\t * position in the generated source.\n\t *\n\t * The only parameter is the raw source map (either as a JSON string, or\n\t * already parsed to an object). According to the spec, source maps have the\n\t * following attributes:\n\t *\n\t *   - version: Which version of the source map spec this map is following.\n\t *   - sources: An array of URLs to the original source files.\n\t *   - names: An array of identifiers which can be referrenced by individual mappings.\n\t *   - sourceRoot: Optional. The URL root from which all sources are relative.\n\t *   - sourcesContent: Optional. An array of contents of the original source files.\n\t *   - mappings: A string of base64 VLQs which contain the actual mappings.\n\t *   - file: Optional. The generated file this source map is associated with.\n\t *\n\t * Here is an example source map, taken from the source map spec[0]:\n\t *\n\t *     {\n\t *       version : 3,\n\t *       file: \"out.js\",\n\t *       sourceRoot : \"\",\n\t *       sources: [\"foo.js\", \"bar.js\"],\n\t *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n\t *       mappings: \"AA,AB;;ABCDE;\"\n\t *     }\n\t *\n\t * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n\t */\n\tfunction BasicSourceMapConsumer(aSourceMap) {\n\t  var sourceMap = aSourceMap;\n\t  if (typeof aSourceMap === 'string') {\n\t    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n\t  }\n\n\t  var version = util.getArg(sourceMap, 'version');\n\t  var sources = util.getArg(sourceMap, 'sources');\n\t  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n\t  // requires the array) to play nice here.\n\t  var names = util.getArg(sourceMap, 'names', []);\n\t  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n\t  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n\t  var mappings = util.getArg(sourceMap, 'mappings');\n\t  var file = util.getArg(sourceMap, 'file', null);\n\n\t  // Once again, Sass deviates from the spec and supplies the version as a\n\t  // string rather than a number, so we use loose equality checking here.\n\t  if (version != this._version) {\n\t    throw new Error('Unsupported version: ' + version);\n\t  }\n\n\t  sources = sources\n\t    .map(String)\n\t    // Some source maps produce relative source paths like \"./foo.js\" instead of\n\t    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n\t    // See bugzil.la/1090768.\n\t    .map(util.normalize)\n\t    // Always ensure that absolute sources are internally stored relative to\n\t    // the source root, if the source root is absolute. Not doing this would\n\t    // be particularly problematic when the source root is a prefix of the\n\t    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n\t    .map(function (source) {\n\t      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n\t        ? util.relative(sourceRoot, source)\n\t        : source;\n\t    });\n\n\t  // Pass `true` below to allow duplicate names and sources. While source maps\n\t  // are intended to be compressed and deduplicated, the TypeScript compiler\n\t  // sometimes generates source maps with duplicates in them. See Github issue\n\t  // #72 and bugzil.la/889492.\n\t  this._names = ArraySet.fromArray(names.map(String), true);\n\t  this._sources = ArraySet.fromArray(sources, true);\n\n\t  this.sourceRoot = sourceRoot;\n\t  this.sourcesContent = sourcesContent;\n\t  this._mappings = mappings;\n\t  this.file = file;\n\t}\n\n\tBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n\tBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n\t/**\n\t * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n\t *\n\t * @param SourceMapGenerator aSourceMap\n\t *        The source map that will be consumed.\n\t * @returns BasicSourceMapConsumer\n\t */\n\tBasicSourceMapConsumer.fromSourceMap =\n\t  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n\t    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n\t    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n\t    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n\t    smc.sourceRoot = aSourceMap._sourceRoot;\n\t    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n\t                                                            smc.sourceRoot);\n\t    smc.file = aSourceMap._file;\n\n\t    // Because we are modifying the entries (by converting string sources and\n\t    // names to indices into the sources and names ArraySets), we have to make\n\t    // a copy of the entry or else bad things happen. Shared mutable state\n\t    // strikes again! See github issue #191.\n\n\t    var generatedMappings = aSourceMap._mappings.toArray().slice();\n\t    var destGeneratedMappings = smc.__generatedMappings = [];\n\t    var destOriginalMappings = smc.__originalMappings = [];\n\n\t    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n\t      var srcMapping = generatedMappings[i];\n\t      var destMapping = new Mapping;\n\t      destMapping.generatedLine = srcMapping.generatedLine;\n\t      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n\t      if (srcMapping.source) {\n\t        destMapping.source = sources.indexOf(srcMapping.source);\n\t        destMapping.originalLine = srcMapping.originalLine;\n\t        destMapping.originalColumn = srcMapping.originalColumn;\n\n\t        if (srcMapping.name) {\n\t          destMapping.name = names.indexOf(srcMapping.name);\n\t        }\n\n\t        destOriginalMappings.push(destMapping);\n\t      }\n\n\t      destGeneratedMappings.push(destMapping);\n\t    }\n\n\t    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n\t    return smc;\n\t  };\n\n\t/**\n\t * The version of the source mapping spec that we are consuming.\n\t */\n\tBasicSourceMapConsumer.prototype._version = 3;\n\n\t/**\n\t * The list of original sources.\n\t */\n\tObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n\t  get: function () {\n\t    return this._sources.toArray().map(function (s) {\n\t      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n\t    }, this);\n\t  }\n\t});\n\n\t/**\n\t * Provide the JIT with a nice shape / hidden class.\n\t */\n\tfunction Mapping() {\n\t  this.generatedLine = 0;\n\t  this.generatedColumn = 0;\n\t  this.source = null;\n\t  this.originalLine = null;\n\t  this.originalColumn = null;\n\t  this.name = null;\n\t}\n\n\t/**\n\t * Parse the mappings in a string in to a data structure which we can easily\n\t * query (the ordered arrays in the `this.__generatedMappings` and\n\t * `this.__originalMappings` properties).\n\t */\n\tBasicSourceMapConsumer.prototype._parseMappings =\n\t  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n\t    var generatedLine = 1;\n\t    var previousGeneratedColumn = 0;\n\t    var previousOriginalLine = 0;\n\t    var previousOriginalColumn = 0;\n\t    var previousSource = 0;\n\t    var previousName = 0;\n\t    var length = aStr.length;\n\t    var index = 0;\n\t    var cachedSegments = {};\n\t    var temp = {};\n\t    var originalMappings = [];\n\t    var generatedMappings = [];\n\t    var mapping, str, segment, end, value;\n\n\t    while (index < length) {\n\t      if (aStr.charAt(index) === ';') {\n\t        generatedLine++;\n\t        index++;\n\t        previousGeneratedColumn = 0;\n\t      }\n\t      else if (aStr.charAt(index) === ',') {\n\t        index++;\n\t      }\n\t      else {\n\t        mapping = new Mapping();\n\t        mapping.generatedLine = generatedLine;\n\n\t        // Because each offset is encoded relative to the previous one,\n\t        // many segments often have the same encoding. We can exploit this\n\t        // fact by caching the parsed variable length fields of each segment,\n\t        // allowing us to avoid a second parse if we encounter the same\n\t        // segment again.\n\t        for (end = index; end < length; end++) {\n\t          if (this._charIsMappingSeparator(aStr, end)) {\n\t            break;\n\t          }\n\t        }\n\t        str = aStr.slice(index, end);\n\n\t        segment = cachedSegments[str];\n\t        if (segment) {\n\t          index += str.length;\n\t        } else {\n\t          segment = [];\n\t          while (index < end) {\n\t            base64VLQ.decode(aStr, index, temp);\n\t            value = temp.value;\n\t            index = temp.rest;\n\t            segment.push(value);\n\t          }\n\n\t          if (segment.length === 2) {\n\t            throw new Error('Found a source, but no line and column');\n\t          }\n\n\t          if (segment.length === 3) {\n\t            throw new Error('Found a source and line, but no column');\n\t          }\n\n\t          cachedSegments[str] = segment;\n\t        }\n\n\t        // Generated column.\n\t        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n\t        previousGeneratedColumn = mapping.generatedColumn;\n\n\t        if (segment.length > 1) {\n\t          // Original source.\n\t          mapping.source = previousSource + segment[1];\n\t          previousSource += segment[1];\n\n\t          // Original line.\n\t          mapping.originalLine = previousOriginalLine + segment[2];\n\t          previousOriginalLine = mapping.originalLine;\n\t          // Lines are stored 0-based\n\t          mapping.originalLine += 1;\n\n\t          // Original column.\n\t          mapping.originalColumn = previousOriginalColumn + segment[3];\n\t          previousOriginalColumn = mapping.originalColumn;\n\n\t          if (segment.length > 4) {\n\t            // Original name.\n\t            mapping.name = previousName + segment[4];\n\t            previousName += segment[4];\n\t          }\n\t        }\n\n\t        generatedMappings.push(mapping);\n\t        if (typeof mapping.originalLine === 'number') {\n\t          originalMappings.push(mapping);\n\t        }\n\t      }\n\t    }\n\n\t    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n\t    this.__generatedMappings = generatedMappings;\n\n\t    quickSort(originalMappings, util.compareByOriginalPositions);\n\t    this.__originalMappings = originalMappings;\n\t  };\n\n\t/**\n\t * Find the mapping that best matches the hypothetical \"needle\" mapping that\n\t * we are searching for in the given \"haystack\" of mappings.\n\t */\n\tBasicSourceMapConsumer.prototype._findMapping =\n\t  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n\t                                         aColumnName, aComparator, aBias) {\n\t    // To return the position we are searching for, we must first find the\n\t    // mapping for the given position and then return the opposite position it\n\t    // points to. Because the mappings are sorted, we can use binary search to\n\t    // find the best mapping.\n\n\t    if (aNeedle[aLineName] <= 0) {\n\t      throw new TypeError('Line must be greater than or equal to 1, got '\n\t                          + aNeedle[aLineName]);\n\t    }\n\t    if (aNeedle[aColumnName] < 0) {\n\t      throw new TypeError('Column must be greater than or equal to 0, got '\n\t                          + aNeedle[aColumnName]);\n\t    }\n\n\t    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n\t  };\n\n\t/**\n\t * Compute the last column for each generated mapping. The last column is\n\t * inclusive.\n\t */\n\tBasicSourceMapConsumer.prototype.computeColumnSpans =\n\t  function SourceMapConsumer_computeColumnSpans() {\n\t    for (var index = 0; index < this._generatedMappings.length; ++index) {\n\t      var mapping = this._generatedMappings[index];\n\n\t      // Mappings do not contain a field for the last generated columnt. We\n\t      // can come up with an optimistic estimate, however, by assuming that\n\t      // mappings are contiguous (i.e. given two consecutive mappings, the\n\t      // first mapping ends where the second one starts).\n\t      if (index + 1 < this._generatedMappings.length) {\n\t        var nextMapping = this._generatedMappings[index + 1];\n\n\t        if (mapping.generatedLine === nextMapping.generatedLine) {\n\t          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n\t          continue;\n\t        }\n\t      }\n\n\t      // The last mapping for each line spans the entire line.\n\t      mapping.lastGeneratedColumn = Infinity;\n\t    }\n\t  };\n\n\t/**\n\t * Returns the original source, line, and column information for the generated\n\t * source's line and column positions provided. The only argument is an object\n\t * with the following properties:\n\t *\n\t *   - line: The line number in the generated source.\n\t *   - column: The column number in the generated source.\n\t *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n\t *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n\t *\n\t * and an object is returned with the following properties:\n\t *\n\t *   - source: The original source file, or null.\n\t *   - line: The line number in the original source, or null.\n\t *   - column: The column number in the original source, or null.\n\t *   - name: The original identifier, or null.\n\t */\n\tBasicSourceMapConsumer.prototype.originalPositionFor =\n\t  function SourceMapConsumer_originalPositionFor(aArgs) {\n\t    var needle = {\n\t      generatedLine: util.getArg(aArgs, 'line'),\n\t      generatedColumn: util.getArg(aArgs, 'column')\n\t    };\n\n\t    var index = this._findMapping(\n\t      needle,\n\t      this._generatedMappings,\n\t      \"generatedLine\",\n\t      \"generatedColumn\",\n\t      util.compareByGeneratedPositionsDeflated,\n\t      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n\t    );\n\n\t    if (index >= 0) {\n\t      var mapping = this._generatedMappings[index];\n\n\t      if (mapping.generatedLine === needle.generatedLine) {\n\t        var source = util.getArg(mapping, 'source', null);\n\t        if (source !== null) {\n\t          source = this._sources.at(source);\n\t          if (this.sourceRoot != null) {\n\t            source = util.join(this.sourceRoot, source);\n\t          }\n\t        }\n\t        var name = util.getArg(mapping, 'name', null);\n\t        if (name !== null) {\n\t          name = this._names.at(name);\n\t        }\n\t        return {\n\t          source: source,\n\t          line: util.getArg(mapping, 'originalLine', null),\n\t          column: util.getArg(mapping, 'originalColumn', null),\n\t          name: name\n\t        };\n\t      }\n\t    }\n\n\t    return {\n\t      source: null,\n\t      line: null,\n\t      column: null,\n\t      name: null\n\t    };\n\t  };\n\n\t/**\n\t * Return true if we have the source content for every source in the source\n\t * map, false otherwise.\n\t */\n\tBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n\t  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n\t    if (!this.sourcesContent) {\n\t      return false;\n\t    }\n\t    return this.sourcesContent.length >= this._sources.size() &&\n\t      !this.sourcesContent.some(function (sc) { return sc == null; });\n\t  };\n\n\t/**\n\t * Returns the original source content. The only argument is the url of the\n\t * original source file. Returns null if no original source content is\n\t * available.\n\t */\n\tBasicSourceMapConsumer.prototype.sourceContentFor =\n\t  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n\t    if (!this.sourcesContent) {\n\t      return null;\n\t    }\n\n\t    if (this.sourceRoot != null) {\n\t      aSource = util.relative(this.sourceRoot, aSource);\n\t    }\n\n\t    if (this._sources.has(aSource)) {\n\t      return this.sourcesContent[this._sources.indexOf(aSource)];\n\t    }\n\n\t    var url;\n\t    if (this.sourceRoot != null\n\t        && (url = util.urlParse(this.sourceRoot))) {\n\t      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n\t      // many users. We can help them out when they expect file:// URIs to\n\t      // behave like it would if they were running a local HTTP server. See\n\t      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n\t      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n\t      if (url.scheme == \"file\"\n\t          && this._sources.has(fileUriAbsPath)) {\n\t        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n\t      }\n\n\t      if ((!url.path || url.path == \"/\")\n\t          && this._sources.has(\"/\" + aSource)) {\n\t        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n\t      }\n\t    }\n\n\t    // This function is used recursively from\n\t    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n\t    // don't want to throw if we can't find the source - we just want to\n\t    // return null, so we provide a flag to exit gracefully.\n\t    if (nullOnMissing) {\n\t      return null;\n\t    }\n\t    else {\n\t      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n\t    }\n\t  };\n\n\t/**\n\t * Returns the generated line and column information for the original source,\n\t * line, and column positions provided. The only argument is an object with\n\t * the following properties:\n\t *\n\t *   - source: The filename of the original source.\n\t *   - line: The line number in the original source.\n\t *   - column: The column number in the original source.\n\t *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n\t *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n\t *\n\t * and an object is returned with the following properties:\n\t *\n\t *   - line: The line number in the generated source, or null.\n\t *   - column: The column number in the generated source, or null.\n\t */\n\tBasicSourceMapConsumer.prototype.generatedPositionFor =\n\t  function SourceMapConsumer_generatedPositionFor(aArgs) {\n\t    var source = util.getArg(aArgs, 'source');\n\t    if (this.sourceRoot != null) {\n\t      source = util.relative(this.sourceRoot, source);\n\t    }\n\t    if (!this._sources.has(source)) {\n\t      return {\n\t        line: null,\n\t        column: null,\n\t        lastColumn: null\n\t      };\n\t    }\n\t    source = this._sources.indexOf(source);\n\n\t    var needle = {\n\t      source: source,\n\t      originalLine: util.getArg(aArgs, 'line'),\n\t      originalColumn: util.getArg(aArgs, 'column')\n\t    };\n\n\t    var index = this._findMapping(\n\t      needle,\n\t      this._originalMappings,\n\t      \"originalLine\",\n\t      \"originalColumn\",\n\t      util.compareByOriginalPositions,\n\t      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n\t    );\n\n\t    if (index >= 0) {\n\t      var mapping = this._originalMappings[index];\n\n\t      if (mapping.source === needle.source) {\n\t        return {\n\t          line: util.getArg(mapping, 'generatedLine', null),\n\t          column: util.getArg(mapping, 'generatedColumn', null),\n\t          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n\t        };\n\t      }\n\t    }\n\n\t    return {\n\t      line: null,\n\t      column: null,\n\t      lastColumn: null\n\t    };\n\t  };\n\n\texports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n\t/**\n\t * An IndexedSourceMapConsumer instance represents a parsed source map which\n\t * we can query for information. It differs from BasicSourceMapConsumer in\n\t * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n\t * input.\n\t *\n\t * The only parameter is a raw source map (either as a JSON string, or already\n\t * parsed to an object). According to the spec for indexed source maps, they\n\t * have the following attributes:\n\t *\n\t *   - version: Which version of the source map spec this map is following.\n\t *   - file: Optional. The generated file this source map is associated with.\n\t *   - sections: A list of section definitions.\n\t *\n\t * Each value under the \"sections\" field has two fields:\n\t *   - offset: The offset into the original specified at which this section\n\t *       begins to apply, defined as an object with a \"line\" and \"column\"\n\t *       field.\n\t *   - map: A source map definition. This source map could also be indexed,\n\t *       but doesn't have to be.\n\t *\n\t * Instead of the \"map\" field, it's also possible to have a \"url\" field\n\t * specifying a URL to retrieve a source map from, but that's currently\n\t * unsupported.\n\t *\n\t * Here's an example source map, taken from the source map spec[0], but\n\t * modified to omit a section which uses the \"url\" field.\n\t *\n\t *  {\n\t *    version : 3,\n\t *    file: \"app.js\",\n\t *    sections: [{\n\t *      offset: {line:100, column:10},\n\t *      map: {\n\t *        version : 3,\n\t *        file: \"section.js\",\n\t *        sources: [\"foo.js\", \"bar.js\"],\n\t *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n\t *        mappings: \"AAAA,E;;ABCDE;\"\n\t *      }\n\t *    }],\n\t *  }\n\t *\n\t * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n\t */\n\tfunction IndexedSourceMapConsumer(aSourceMap) {\n\t  var sourceMap = aSourceMap;\n\t  if (typeof aSourceMap === 'string') {\n\t    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n\t  }\n\n\t  var version = util.getArg(sourceMap, 'version');\n\t  var sections = util.getArg(sourceMap, 'sections');\n\n\t  if (version != this._version) {\n\t    throw new Error('Unsupported version: ' + version);\n\t  }\n\n\t  this._sources = new ArraySet();\n\t  this._names = new ArraySet();\n\n\t  var lastOffset = {\n\t    line: -1,\n\t    column: 0\n\t  };\n\t  this._sections = sections.map(function (s) {\n\t    if (s.url) {\n\t      // The url field will require support for asynchronicity.\n\t      // See https://github.com/mozilla/source-map/issues/16\n\t      throw new Error('Support for url field in sections not implemented.');\n\t    }\n\t    var offset = util.getArg(s, 'offset');\n\t    var offsetLine = util.getArg(offset, 'line');\n\t    var offsetColumn = util.getArg(offset, 'column');\n\n\t    if (offsetLine < lastOffset.line ||\n\t        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n\t      throw new Error('Section offsets must be ordered and non-overlapping.');\n\t    }\n\t    lastOffset = offset;\n\n\t    return {\n\t      generatedOffset: {\n\t        // The offset fields are 0-based, but we use 1-based indices when\n\t        // encoding/decoding from VLQ.\n\t        generatedLine: offsetLine + 1,\n\t        generatedColumn: offsetColumn + 1\n\t      },\n\t      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n\t    }\n\t  });\n\t}\n\n\tIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n\tIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n\t/**\n\t * The version of the source mapping spec that we are consuming.\n\t */\n\tIndexedSourceMapConsumer.prototype._version = 3;\n\n\t/**\n\t * The list of original sources.\n\t */\n\tObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n\t  get: function () {\n\t    var sources = [];\n\t    for (var i = 0; i < this._sections.length; i++) {\n\t      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n\t        sources.push(this._sections[i].consumer.sources[j]);\n\t      }\n\t    }\n\t    return sources;\n\t  }\n\t});\n\n\t/**\n\t * Returns the original source, line, and column information for the generated\n\t * source's line and column positions provided. The only argument is an object\n\t * with the following properties:\n\t *\n\t *   - line: The line number in the generated source.\n\t *   - column: The column number in the generated source.\n\t *\n\t * and an object is returned with the following properties:\n\t *\n\t *   - source: The original source file, or null.\n\t *   - line: The line number in the original source, or null.\n\t *   - column: The column number in the original source, or null.\n\t *   - name: The original identifier, or null.\n\t */\n\tIndexedSourceMapConsumer.prototype.originalPositionFor =\n\t  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n\t    var needle = {\n\t      generatedLine: util.getArg(aArgs, 'line'),\n\t      generatedColumn: util.getArg(aArgs, 'column')\n\t    };\n\n\t    // Find the section containing the generated position we're trying to map\n\t    // to an original position.\n\t    var sectionIndex = binarySearch.search(needle, this._sections,\n\t      function(needle, section) {\n\t        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n\t        if (cmp) {\n\t          return cmp;\n\t        }\n\n\t        return (needle.generatedColumn -\n\t                section.generatedOffset.generatedColumn);\n\t      });\n\t    var section = this._sections[sectionIndex];\n\n\t    if (!section) {\n\t      return {\n\t        source: null,\n\t        line: null,\n\t        column: null,\n\t        name: null\n\t      };\n\t    }\n\n\t    return section.consumer.originalPositionFor({\n\t      line: needle.generatedLine -\n\t        (section.generatedOffset.generatedLine - 1),\n\t      column: needle.generatedColumn -\n\t        (section.generatedOffset.generatedLine === needle.generatedLine\n\t         ? section.generatedOffset.generatedColumn - 1\n\t         : 0),\n\t      bias: aArgs.bias\n\t    });\n\t  };\n\n\t/**\n\t * Return true if we have the source content for every source in the source\n\t * map, false otherwise.\n\t */\n\tIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n\t  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n\t    return this._sections.every(function (s) {\n\t      return s.consumer.hasContentsOfAllSources();\n\t    });\n\t  };\n\n\t/**\n\t * Returns the original source content. The only argument is the url of the\n\t * original source file. Returns null if no original source content is\n\t * available.\n\t */\n\tIndexedSourceMapConsumer.prototype.sourceContentFor =\n\t  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n\t    for (var i = 0; i < this._sections.length; i++) {\n\t      var section = this._sections[i];\n\n\t      var content = section.consumer.sourceContentFor(aSource, true);\n\t      if (content) {\n\t        return content;\n\t      }\n\t    }\n\t    if (nullOnMissing) {\n\t      return null;\n\t    }\n\t    else {\n\t      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n\t    }\n\t  };\n\n\t/**\n\t * Returns the generated line and column information for the original source,\n\t * line, and column positions provided. The only argument is an object with\n\t * the following properties:\n\t *\n\t *   - source: The filename of the original source.\n\t *   - line: The line number in the original source.\n\t *   - column: The column number in the original source.\n\t *\n\t * and an object is returned with the following properties:\n\t *\n\t *   - line: The line number in the generated source, or null.\n\t *   - column: The column number in the generated source, or null.\n\t */\n\tIndexedSourceMapConsumer.prototype.generatedPositionFor =\n\t  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n\t    for (var i = 0; i < this._sections.length; i++) {\n\t      var section = this._sections[i];\n\n\t      // Only consider this section if the requested source is in the list of\n\t      // sources of the consumer.\n\t      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n\t        continue;\n\t      }\n\t      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n\t      if (generatedPosition) {\n\t        var ret = {\n\t          line: generatedPosition.line +\n\t            (section.generatedOffset.generatedLine - 1),\n\t          column: generatedPosition.column +\n\t            (section.generatedOffset.generatedLine === generatedPosition.line\n\t             ? section.generatedOffset.generatedColumn - 1\n\t             : 0)\n\t        };\n\t        return ret;\n\t      }\n\t    }\n\n\t    return {\n\t      line: null,\n\t      column: null\n\t    };\n\t  };\n\n\t/**\n\t * Parse the mappings in a string in to a data structure which we can easily\n\t * query (the ordered arrays in the `this.__generatedMappings` and\n\t * `this.__originalMappings` properties).\n\t */\n\tIndexedSourceMapConsumer.prototype._parseMappings =\n\t  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n\t    this.__generatedMappings = [];\n\t    this.__originalMappings = [];\n\t    for (var i = 0; i < this._sections.length; i++) {\n\t      var section = this._sections[i];\n\t      var sectionMappings = section.consumer._generatedMappings;\n\t      for (var j = 0; j < sectionMappings.length; j++) {\n\t        var mapping = sectionMappings[j];\n\n\t        var source = section.consumer._sources.at(mapping.source);\n\t        if (section.consumer.sourceRoot !== null) {\n\t          source = util.join(section.consumer.sourceRoot, source);\n\t        }\n\t        this._sources.add(source);\n\t        source = this._sources.indexOf(source);\n\n\t        var name = section.consumer._names.at(mapping.name);\n\t        this._names.add(name);\n\t        name = this._names.indexOf(name);\n\n\t        // The mappings coming from the consumer for the section have\n\t        // generated positions relative to the start of the section, so we\n\t        // need to offset them to be relative to the start of the concatenated\n\t        // generated file.\n\t        var adjustedMapping = {\n\t          source: source,\n\t          generatedLine: mapping.generatedLine +\n\t            (section.generatedOffset.generatedLine - 1),\n\t          generatedColumn: mapping.generatedColumn +\n\t            (section.generatedOffset.generatedLine === mapping.generatedLine\n\t            ? section.generatedOffset.generatedColumn - 1\n\t            : 0),\n\t          originalLine: mapping.originalLine,\n\t          originalColumn: mapping.originalColumn,\n\t          name: name\n\t        };\n\n\t        this.__generatedMappings.push(adjustedMapping);\n\t        if (typeof adjustedMapping.originalLine === 'number') {\n\t          this.__originalMappings.push(adjustedMapping);\n\t        }\n\t      }\n\t    }\n\n\t    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n\t    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n\t  };\n\n\texports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\t/**\n\t * This is a helper function for getting values from parameter/options\n\t * objects.\n\t *\n\t * @param args The object we are extracting values from\n\t * @param name The name of the property we are getting.\n\t * @param defaultValue An optional value to return if the property is missing\n\t * from the object. If this is not specified and the property is missing, an\n\t * error will be thrown.\n\t */\n\tfunction getArg(aArgs, aName, aDefaultValue) {\n\t  if (aName in aArgs) {\n\t    return aArgs[aName];\n\t  } else if (arguments.length === 3) {\n\t    return aDefaultValue;\n\t  } else {\n\t    throw new Error('\"' + aName + '\" is a required argument.');\n\t  }\n\t}\n\texports.getArg = getArg;\n\n\tvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\n\tvar dataUrlRegexp = /^data:.+\\,.+$/;\n\n\tfunction urlParse(aUrl) {\n\t  var match = aUrl.match(urlRegexp);\n\t  if (!match) {\n\t    return null;\n\t  }\n\t  return {\n\t    scheme: match[1],\n\t    auth: match[2],\n\t    host: match[3],\n\t    port: match[4],\n\t    path: match[5]\n\t  };\n\t}\n\texports.urlParse = urlParse;\n\n\tfunction urlGenerate(aParsedUrl) {\n\t  var url = '';\n\t  if (aParsedUrl.scheme) {\n\t    url += aParsedUrl.scheme + ':';\n\t  }\n\t  url += '//';\n\t  if (aParsedUrl.auth) {\n\t    url += aParsedUrl.auth + '@';\n\t  }\n\t  if (aParsedUrl.host) {\n\t    url += aParsedUrl.host;\n\t  }\n\t  if (aParsedUrl.port) {\n\t    url += \":\" + aParsedUrl.port\n\t  }\n\t  if (aParsedUrl.path) {\n\t    url += aParsedUrl.path;\n\t  }\n\t  return url;\n\t}\n\texports.urlGenerate = urlGenerate;\n\n\t/**\n\t * Normalizes a path, or the path portion of a URL:\n\t *\n\t * - Replaces consecutive slashes with one slash.\n\t * - Removes unnecessary '.' parts.\n\t * - Removes unnecessary '<dir>/..' parts.\n\t *\n\t * Based on code in the Node.js 'path' core module.\n\t *\n\t * @param aPath The path or url to normalize.\n\t */\n\tfunction normalize(aPath) {\n\t  var path = aPath;\n\t  var url = urlParse(aPath);\n\t  if (url) {\n\t    if (!url.path) {\n\t      return aPath;\n\t    }\n\t    path = url.path;\n\t  }\n\t  var isAbsolute = exports.isAbsolute(path);\n\n\t  var parts = path.split(/\\/+/);\n\t  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n\t    part = parts[i];\n\t    if (part === '.') {\n\t      parts.splice(i, 1);\n\t    } else if (part === '..') {\n\t      up++;\n\t    } else if (up > 0) {\n\t      if (part === '') {\n\t        // The first part is blank if the path is absolute. Trying to go\n\t        // above the root is a no-op. Therefore we can remove all '..' parts\n\t        // directly after the root.\n\t        parts.splice(i + 1, up);\n\t        up = 0;\n\t      } else {\n\t        parts.splice(i, 2);\n\t        up--;\n\t      }\n\t    }\n\t  }\n\t  path = parts.join('/');\n\n\t  if (path === '') {\n\t    path = isAbsolute ? '/' : '.';\n\t  }\n\n\t  if (url) {\n\t    url.path = path;\n\t    return urlGenerate(url);\n\t  }\n\t  return path;\n\t}\n\texports.normalize = normalize;\n\n\t/**\n\t * Joins two paths/URLs.\n\t *\n\t * @param aRoot The root path or URL.\n\t * @param aPath The path or URL to be joined with the root.\n\t *\n\t * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n\t *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n\t *   first.\n\t * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n\t *   is updated with the result and aRoot is returned. Otherwise the result\n\t *   is returned.\n\t *   - If aPath is absolute, the result is aPath.\n\t *   - Otherwise the two paths are joined with a slash.\n\t * - Joining for example 'http://' and 'www.example.com' is also supported.\n\t */\n\tfunction join(aRoot, aPath) {\n\t  if (aRoot === \"\") {\n\t    aRoot = \".\";\n\t  }\n\t  if (aPath === \"\") {\n\t    aPath = \".\";\n\t  }\n\t  var aPathUrl = urlParse(aPath);\n\t  var aRootUrl = urlParse(aRoot);\n\t  if (aRootUrl) {\n\t    aRoot = aRootUrl.path || '/';\n\t  }\n\n\t  // `join(foo, '//www.example.org')`\n\t  if (aPathUrl && !aPathUrl.scheme) {\n\t    if (aRootUrl) {\n\t      aPathUrl.scheme = aRootUrl.scheme;\n\t    }\n\t    return urlGenerate(aPathUrl);\n\t  }\n\n\t  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n\t    return aPath;\n\t  }\n\n\t  // `join('http://', 'www.example.com')`\n\t  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n\t    aRootUrl.host = aPath;\n\t    return urlGenerate(aRootUrl);\n\t  }\n\n\t  var joined = aPath.charAt(0) === '/'\n\t    ? aPath\n\t    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n\t  if (aRootUrl) {\n\t    aRootUrl.path = joined;\n\t    return urlGenerate(aRootUrl);\n\t  }\n\t  return joined;\n\t}\n\texports.join = join;\n\n\texports.isAbsolute = function (aPath) {\n\t  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n\t};\n\n\t/**\n\t * Make a path relative to a URL or another path.\n\t *\n\t * @param aRoot The root path or URL.\n\t * @param aPath The path or URL to be made relative to aRoot.\n\t */\n\tfunction relative(aRoot, aPath) {\n\t  if (aRoot === \"\") {\n\t    aRoot = \".\";\n\t  }\n\n\t  aRoot = aRoot.replace(/\\/$/, '');\n\n\t  // It is possible for the path to be above the root. In this case, simply\n\t  // checking whether the root is a prefix of the path won't work. Instead, we\n\t  // need to remove components from the root one by one, until either we find\n\t  // a prefix that fits, or we run out of components to remove.\n\t  var level = 0;\n\t  while (aPath.indexOf(aRoot + '/') !== 0) {\n\t    var index = aRoot.lastIndexOf(\"/\");\n\t    if (index < 0) {\n\t      return aPath;\n\t    }\n\n\t    // If the only part of the root that is left is the scheme (i.e. http://,\n\t    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n\t    // have exhausted all components, so the path is not relative to the root.\n\t    aRoot = aRoot.slice(0, index);\n\t    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n\t      return aPath;\n\t    }\n\n\t    ++level;\n\t  }\n\n\t  // Make sure we add a \"../\" for each component we removed from the root.\n\t  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n\t}\n\texports.relative = relative;\n\n\tvar supportsNullProto = (function () {\n\t  var obj = Object.create(null);\n\t  return !('__proto__' in obj);\n\t}());\n\n\tfunction identity (s) {\n\t  return s;\n\t}\n\n\t/**\n\t * Because behavior goes wacky when you set `__proto__` on objects, we\n\t * have to prefix all the strings in our set with an arbitrary character.\n\t *\n\t * See https://github.com/mozilla/source-map/pull/31 and\n\t * https://github.com/mozilla/source-map/issues/30\n\t *\n\t * @param String aStr\n\t */\n\tfunction toSetString(aStr) {\n\t  if (isProtoString(aStr)) {\n\t    return '$' + aStr;\n\t  }\n\n\t  return aStr;\n\t}\n\texports.toSetString = supportsNullProto ? identity : toSetString;\n\n\tfunction fromSetString(aStr) {\n\t  if (isProtoString(aStr)) {\n\t    return aStr.slice(1);\n\t  }\n\n\t  return aStr;\n\t}\n\texports.fromSetString = supportsNullProto ? identity : fromSetString;\n\n\tfunction isProtoString(s) {\n\t  if (!s) {\n\t    return false;\n\t  }\n\n\t  var length = s.length;\n\n\t  if (length < 9 /* \"__proto__\".length */) {\n\t    return false;\n\t  }\n\n\t  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n\t      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n\t      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n\t      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n\t      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n\t      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n\t    return false;\n\t  }\n\n\t  for (var i = length - 10; i >= 0; i--) {\n\t    if (s.charCodeAt(i) !== 36 /* '$' */) {\n\t      return false;\n\t    }\n\t  }\n\n\t  return true;\n\t}\n\n\t/**\n\t * Comparator between two mappings where the original positions are compared.\n\t *\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n\t * mappings with the same original source/line/column, but different generated\n\t * line and column the same. Useful when searching for a mapping with a\n\t * stubbed out mapping.\n\t */\n\tfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n\t  var cmp = mappingA.source - mappingB.source;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0 || onlyCompareOriginal) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return mappingA.name - mappingB.name;\n\t}\n\texports.compareByOriginalPositions = compareByOriginalPositions;\n\n\t/**\n\t * Comparator between two mappings with deflated source and name indices where\n\t * the generated positions are compared.\n\t *\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n\t * mappings with the same generated line and column, but different\n\t * source/name/original line and column the same. Useful when searching for a\n\t * mapping with a stubbed out mapping.\n\t */\n\tfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0 || onlyCompareGenerated) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.source - mappingB.source;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return mappingA.name - mappingB.name;\n\t}\n\texports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\n\tfunction strcmp(aStr1, aStr2) {\n\t  if (aStr1 === aStr2) {\n\t    return 0;\n\t  }\n\n\t  if (aStr1 > aStr2) {\n\t    return 1;\n\t  }\n\n\t  return -1;\n\t}\n\n\t/**\n\t * Comparator between two mappings with inflated source and name strings where\n\t * the generated positions are compared.\n\t */\n\tfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = strcmp(mappingA.source, mappingB.source);\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return strcmp(mappingA.name, mappingB.name);\n\t}\n\texports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\texports.GREATEST_LOWER_BOUND = 1;\n\texports.LEAST_UPPER_BOUND = 2;\n\n\t/**\n\t * Recursive implementation of binary search.\n\t *\n\t * @param aLow Indices here and lower do not contain the needle.\n\t * @param aHigh Indices here and higher do not contain the needle.\n\t * @param aNeedle The element being searched for.\n\t * @param aHaystack The non-empty array being searched.\n\t * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t */\n\tfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n\t  // This function terminates when one of the following is true:\n\t  //\n\t  //   1. We find the exact element we are looking for.\n\t  //\n\t  //   2. We did not find the exact element, but we can return the index of\n\t  //      the next-closest element.\n\t  //\n\t  //   3. We did not find the exact element, and there is no next-closest\n\t  //      element than the one we are searching for, so we return -1.\n\t  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n\t  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n\t  if (cmp === 0) {\n\t    // Found the element we are looking for.\n\t    return mid;\n\t  }\n\t  else if (cmp > 0) {\n\t    // Our needle is greater than aHaystack[mid].\n\t    if (aHigh - mid > 1) {\n\t      // The element is in the upper half.\n\t      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n\t    }\n\n\t    // The exact needle element was not found in this haystack. Determine if\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\n\t      return aHigh < aHaystack.length ? aHigh : -1;\n\t    } else {\n\t      return mid;\n\t    }\n\t  }\n\t  else {\n\t    // Our needle is less than aHaystack[mid].\n\t    if (mid - aLow > 1) {\n\t      // The element is in the lower half.\n\t      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n\t    }\n\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\n\t      return mid;\n\t    } else {\n\t      return aLow < 0 ? -1 : aLow;\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * This is an implementation of binary search which will always try and return\n\t * the index of the closest element if there is no exact hit. This is because\n\t * mappings between original and generated line/col pairs are single points,\n\t * and there is an implicit region between each of them, so a miss just means\n\t * that you aren't on the very start of a region.\n\t *\n\t * @param aNeedle The element you are looking for.\n\t * @param aHaystack The array that is being searched.\n\t * @param aCompare A function which takes the needle and an element in the\n\t *     array and returns -1, 0, or 1 depending on whether the needle is less\n\t *     than, equal to, or greater than the element, respectively.\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n\t */\n\texports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n\t  if (aHaystack.length === 0) {\n\t    return -1;\n\t  }\n\n\t  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n\t                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n\t  if (index < 0) {\n\t    return -1;\n\t  }\n\n\t  // We have found either the exact element, or the next-closest element than\n\t  // the one we are searching for. However, there may be more than one such\n\t  // element. Make sure we always return the smallest of these.\n\t  while (index - 1 >= 0) {\n\t    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n\t      break;\n\t    }\n\t    --index;\n\t  }\n\n\t  return index;\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\tvar util = __webpack_require__(1);\n\tvar has = Object.prototype.hasOwnProperty;\n\n\t/**\n\t * A data structure which is a combination of an array and a set. Adding a new\n\t * member is O(1), testing for membership is O(1), and finding the index of an\n\t * element is O(1). Removing elements from the set is not supported. Only\n\t * strings are supported for membership.\n\t */\n\tfunction ArraySet() {\n\t  this._array = [];\n\t  this._set = Object.create(null);\n\t}\n\n\t/**\n\t * Static method for creating ArraySet instances from an existing array.\n\t */\n\tArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n\t  var set = new ArraySet();\n\t  for (var i = 0, len = aArray.length; i < len; i++) {\n\t    set.add(aArray[i], aAllowDuplicates);\n\t  }\n\t  return set;\n\t};\n\n\t/**\n\t * Return how many unique items are in this ArraySet. If duplicates have been\n\t * added, than those do not count towards the size.\n\t *\n\t * @returns Number\n\t */\n\tArraySet.prototype.size = function ArraySet_size() {\n\t  return Object.getOwnPropertyNames(this._set).length;\n\t};\n\n\t/**\n\t * Add the given string to this set.\n\t *\n\t * @param String aStr\n\t */\n\tArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n\t  var sStr = util.toSetString(aStr);\n\t  var isDuplicate = has.call(this._set, sStr);\n\t  var idx = this._array.length;\n\t  if (!isDuplicate || aAllowDuplicates) {\n\t    this._array.push(aStr);\n\t  }\n\t  if (!isDuplicate) {\n\t    this._set[sStr] = idx;\n\t  }\n\t};\n\n\t/**\n\t * Is the given string a member of this set?\n\t *\n\t * @param String aStr\n\t */\n\tArraySet.prototype.has = function ArraySet_has(aStr) {\n\t  var sStr = util.toSetString(aStr);\n\t  return has.call(this._set, sStr);\n\t};\n\n\t/**\n\t * What is the index of the given string in the array?\n\t *\n\t * @param String aStr\n\t */\n\tArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n\t  var sStr = util.toSetString(aStr);\n\t  if (has.call(this._set, sStr)) {\n\t    return this._set[sStr];\n\t  }\n\t  throw new Error('\"' + aStr + '\" is not in the set.');\n\t};\n\n\t/**\n\t * What is the element at the given index?\n\t *\n\t * @param Number aIdx\n\t */\n\tArraySet.prototype.at = function ArraySet_at(aIdx) {\n\t  if (aIdx >= 0 && aIdx < this._array.length) {\n\t    return this._array[aIdx];\n\t  }\n\t  throw new Error('No element indexed by ' + aIdx);\n\t};\n\n\t/**\n\t * Returns the array representation of this set (which has the proper indices\n\t * indicated by indexOf). Note that this is a copy of the internal array used\n\t * for storing the members so that no one can mess with internal state.\n\t */\n\tArraySet.prototype.toArray = function ArraySet_toArray() {\n\t  return this._array.slice();\n\t};\n\n\texports.ArraySet = ArraySet;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t *\n\t * Based on the Base 64 VLQ implementation in Closure Compiler:\n\t * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n\t *\n\t * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t *  * Redistributions of source code must retain the above copyright\n\t *    notice, this list of conditions and the following disclaimer.\n\t *  * Redistributions in binary form must reproduce the above\n\t *    copyright notice, this list of conditions and the following\n\t *    disclaimer in the documentation and/or other materials provided\n\t *    with the distribution.\n\t *  * Neither the name of Google Inc. nor the names of its\n\t *    contributors may be used to endorse or promote products derived\n\t *    from this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\t * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\t * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\t * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\t * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\n\tvar base64 = __webpack_require__(5);\n\n\t// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n\t// length quantities we use in the source map spec, the first bit is the sign,\n\t// the next four bits are the actual value, and the 6th bit is the\n\t// continuation bit. The continuation bit tells us whether there are more\n\t// digits in this value following this digit.\n\t//\n\t//   Continuation\n\t//   |    Sign\n\t//   |    |\n\t//   V    V\n\t//   101011\n\n\tvar VLQ_BASE_SHIFT = 5;\n\n\t// binary: 100000\n\tvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n\t// binary: 011111\n\tvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n\t// binary: 100000\n\tvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n\t/**\n\t * Converts from a two-complement value to a value where the sign bit is\n\t * placed in the least significant bit.  For example, as decimals:\n\t *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n\t *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n\t */\n\tfunction toVLQSigned(aValue) {\n\t  return aValue < 0\n\t    ? ((-aValue) << 1) + 1\n\t    : (aValue << 1) + 0;\n\t}\n\n\t/**\n\t * Converts to a two-complement value from a value where the sign bit is\n\t * placed in the least significant bit.  For example, as decimals:\n\t *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n\t *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n\t */\n\tfunction fromVLQSigned(aValue) {\n\t  var isNegative = (aValue & 1) === 1;\n\t  var shifted = aValue >> 1;\n\t  return isNegative\n\t    ? -shifted\n\t    : shifted;\n\t}\n\n\t/**\n\t * Returns the base 64 VLQ encoded value.\n\t */\n\texports.encode = function base64VLQ_encode(aValue) {\n\t  var encoded = \"\";\n\t  var digit;\n\n\t  var vlq = toVLQSigned(aValue);\n\n\t  do {\n\t    digit = vlq & VLQ_BASE_MASK;\n\t    vlq >>>= VLQ_BASE_SHIFT;\n\t    if (vlq > 0) {\n\t      // There are still more digits in this value, so we must make sure the\n\t      // continuation bit is marked.\n\t      digit |= VLQ_CONTINUATION_BIT;\n\t    }\n\t    encoded += base64.encode(digit);\n\t  } while (vlq > 0);\n\n\t  return encoded;\n\t};\n\n\t/**\n\t * Decodes the next base 64 VLQ value from the given string and returns the\n\t * value and the rest of the string via the out parameter.\n\t */\n\texports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n\t  var strLen = aStr.length;\n\t  var result = 0;\n\t  var shift = 0;\n\t  var continuation, digit;\n\n\t  do {\n\t    if (aIndex >= strLen) {\n\t      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n\t    }\n\n\t    digit = base64.decode(aStr.charCodeAt(aIndex++));\n\t    if (digit === -1) {\n\t      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n\t    }\n\n\t    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n\t    digit &= VLQ_BASE_MASK;\n\t    result = result + (digit << shift);\n\t    shift += VLQ_BASE_SHIFT;\n\t  } while (continuation);\n\n\t  aOutParam.value = fromVLQSigned(result);\n\t  aOutParam.rest = aIndex;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\tvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n\t/**\n\t * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n\t */\n\texports.encode = function (number) {\n\t  if (0 <= number && number < intToCharMap.length) {\n\t    return intToCharMap[number];\n\t  }\n\t  throw new TypeError(\"Must be between 0 and 63: \" + number);\n\t};\n\n\t/**\n\t * Decode a single base 64 character code digit to an integer. Returns -1 on\n\t * failure.\n\t */\n\texports.decode = function (charCode) {\n\t  var bigA = 65;     // 'A'\n\t  var bigZ = 90;     // 'Z'\n\n\t  var littleA = 97;  // 'a'\n\t  var littleZ = 122; // 'z'\n\n\t  var zero = 48;     // '0'\n\t  var nine = 57;     // '9'\n\n\t  var plus = 43;     // '+'\n\t  var slash = 47;    // '/'\n\n\t  var littleOffset = 26;\n\t  var numberOffset = 52;\n\n\t  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\t  if (bigA <= charCode && charCode <= bigZ) {\n\t    return (charCode - bigA);\n\t  }\n\n\t  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n\t  if (littleA <= charCode && charCode <= littleZ) {\n\t    return (charCode - littleA + littleOffset);\n\t  }\n\n\t  // 52 - 61: 0123456789\n\t  if (zero <= charCode && charCode <= nine) {\n\t    return (charCode - zero + numberOffset);\n\t  }\n\n\t  // 62: +\n\t  if (charCode == plus) {\n\t    return 62;\n\t  }\n\n\t  // 63: /\n\t  if (charCode == slash) {\n\t    return 63;\n\t  }\n\n\t  // Invalid base64 digit.\n\t  return -1;\n\t};\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\t// It turns out that some (most?) JavaScript engines don't self-host\n\t// `Array.prototype.sort`. This makes sense because C++ will likely remain\n\t// faster than JS when doing raw CPU-intensive sorting. However, when using a\n\t// custom comparator function, calling back and forth between the VM's C++ and\n\t// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n\t// worse generated code for the comparator function than would be optimal. In\n\t// fact, when sorting with a comparator, these costs outweigh the benefits of\n\t// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n\t// a ~3500ms mean speed-up in `bench/bench.html`.\n\n\t/**\n\t * Swap the elements indexed by `x` and `y` in the array `ary`.\n\t *\n\t * @param {Array} ary\n\t *        The array.\n\t * @param {Number} x\n\t *        The index of the first item.\n\t * @param {Number} y\n\t *        The index of the second item.\n\t */\n\tfunction swap(ary, x, y) {\n\t  var temp = ary[x];\n\t  ary[x] = ary[y];\n\t  ary[y] = temp;\n\t}\n\n\t/**\n\t * Returns a random integer within the range `low .. high` inclusive.\n\t *\n\t * @param {Number} low\n\t *        The lower bound on the range.\n\t * @param {Number} high\n\t *        The upper bound on the range.\n\t */\n\tfunction randomIntInRange(low, high) {\n\t  return Math.round(low + (Math.random() * (high - low)));\n\t}\n\n\t/**\n\t * The Quick Sort algorithm.\n\t *\n\t * @param {Array} ary\n\t *        An array to sort.\n\t * @param {function} comparator\n\t *        Function to use to compare two items.\n\t * @param {Number} p\n\t *        Start index of the array\n\t * @param {Number} r\n\t *        End index of the array\n\t */\n\tfunction doQuickSort(ary, comparator, p, r) {\n\t  // If our lower bound is less than our upper bound, we (1) partition the\n\t  // array into two pieces and (2) recurse on each half. If it is not, this is\n\t  // the empty array and our base case.\n\n\t  if (p < r) {\n\t    // (1) Partitioning.\n\t    //\n\t    // The partitioning chooses a pivot between `p` and `r` and moves all\n\t    // elements that are less than or equal to the pivot to the before it, and\n\t    // all the elements that are greater than it after it. The effect is that\n\t    // once partition is done, the pivot is in the exact place it will be when\n\t    // the array is put in sorted order, and it will not need to be moved\n\t    // again. This runs in O(n) time.\n\n\t    // Always choose a random pivot so that an input array which is reverse\n\t    // sorted does not cause O(n^2) running time.\n\t    var pivotIndex = randomIntInRange(p, r);\n\t    var i = p - 1;\n\n\t    swap(ary, pivotIndex, r);\n\t    var pivot = ary[r];\n\n\t    // Immediately after `j` is incremented in this loop, the following hold\n\t    // true:\n\t    //\n\t    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n\t    //\n\t    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n\t    for (var j = p; j < r; j++) {\n\t      if (comparator(ary[j], pivot) <= 0) {\n\t        i += 1;\n\t        swap(ary, i, j);\n\t      }\n\t    }\n\n\t    swap(ary, i + 1, j);\n\t    var q = i + 1;\n\n\t    // (2) Recurse on each half.\n\n\t    doQuickSort(ary, comparator, p, q - 1);\n\t    doQuickSort(ary, comparator, q + 1, r);\n\t  }\n\t}\n\n\t/**\n\t * Sort the given array in-place with the given comparator function.\n\t *\n\t * @param {Array} ary\n\t *        An array to sort.\n\t * @param {function} comparator\n\t *        Function to use to compare two items.\n\t */\n\texports.quickSort = function (ary, comparator) {\n\t  doQuickSort(ary, comparator, 0, ary.length - 1);\n\t};\n\n\n/***/ }\n/******/ ]);","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace-gps', ['source-map', 'stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('source-map/lib/source-map-consumer'), require('stackframe'));\n    } else {\n        root.StackTraceGPS = factory(root.SourceMap || root.sourceMap, root.StackFrame);\n    }\n}(this, function(SourceMap, StackFrame) {\n    'use strict';\n\n    /**\n     * Make a X-Domain request to url and callback.\n     *\n     * @param {String} url\n     * @returns {Promise} with response text if fulfilled\n     */\n    function _xdr(url) {\n        return new Promise(function(resolve, reject) {\n            var req = new XMLHttpRequest();\n            req.open('get', url);\n            req.onerror = reject;\n            req.onreadystatechange = function onreadystatechange() {\n                if (req.readyState === 4) {\n                    if ((req.status >= 200 && req.status < 300) ||\n                        (url.substr(0, 7) === 'file://' && req.responseText)) {\n                        resolve(req.responseText);\n                    } else {\n                        reject(new Error('HTTP status: ' + req.status + ' retrieving ' + url));\n                    }\n                }\n            };\n            req.send();\n        });\n\n    }\n\n    /**\n     * Convert a Base64-encoded string into its original representation.\n     * Used for inline sourcemaps.\n     *\n     * @param {String} b64str Base-64 encoded string\n     * @returns {String} original representation of the base64-encoded string.\n     */\n    function _atob(b64str) {\n        if (typeof window !== 'undefined' && window.atob) {\n            return window.atob(b64str);\n        } else {\n            throw new Error('You must supply a polyfill for window.atob in this environment');\n        }\n    }\n\n    function _parseJson(string) {\n        if (typeof JSON !== 'undefined' && JSON.parse) {\n            return JSON.parse(string);\n        } else {\n            throw new Error('You must supply a polyfill for JSON.parse in this environment');\n        }\n    }\n\n    function _findFunctionName(source, lineNumber/*, columnNumber*/) {\n        var syntaxes = [\n            // {name} = function ({args}) TODO args capture\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/,\n            // function {name}({args}) m[1]=name m[2]=args\n            /function\\s+([^('\"`]*?)\\s*\\(([^)]*)\\)/,\n            // {name} = eval()\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/,\n            // fn_name() {\n            /\\b(?!(?:if|for|switch|while|with|catch)\\b)(?:(?:static)\\s+)?(\\S+)\\s*\\(.*?\\)\\s*\\{/,\n            // {name} = () => {\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*\\(.*?\\)\\s*=>/\n        ];\n        var lines = source.split('\\n');\n\n        // Walk backwards in the source lines until we find the line which matches one of the patterns above\n        var code = '';\n        var maxLines = Math.min(lineNumber, 20);\n        for (var i = 0; i < maxLines; ++i) {\n            // lineNo is 1-based, source[] is 0-based\n            var line = lines[lineNumber - i - 1];\n            var commentPos = line.indexOf('//');\n            if (commentPos >= 0) {\n                line = line.substr(0, commentPos);\n            }\n\n            if (line) {\n                code = line + code;\n                var len = syntaxes.length;\n                for (var index = 0; index < len; index++) {\n                    var m = syntaxes[index].exec(code);\n                    if (m && m[1]) {\n                        return m[1];\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n    function _ensureSupportedEnvironment() {\n        if (typeof Object.defineProperty !== 'function' || typeof Object.create !== 'function') {\n            throw new Error('Unable to consume source maps in older browsers');\n        }\n    }\n\n    function _ensureStackFrameIsLegit(stackframe) {\n        if (typeof stackframe !== 'object') {\n            throw new TypeError('Given StackFrame is not an object');\n        } else if (typeof stackframe.fileName !== 'string') {\n            throw new TypeError('Given file name is not a String');\n        } else if (typeof stackframe.lineNumber !== 'number' ||\n            stackframe.lineNumber % 1 !== 0 ||\n            stackframe.lineNumber < 1) {\n            throw new TypeError('Given line number must be a positive integer');\n        } else if (typeof stackframe.columnNumber !== 'number' ||\n            stackframe.columnNumber % 1 !== 0 ||\n            stackframe.columnNumber < 0) {\n            throw new TypeError('Given column number must be a non-negative integer');\n        }\n        return true;\n    }\n\n    function _findSourceMappingURL(source) {\n        var m = /\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)\\s*$/m.exec(source);\n        if (m && m[1]) {\n            return m[1];\n        } else {\n            throw new Error('sourceMappingURL not found');\n        }\n    }\n\n    function _extractLocationInfoFromSourceMapSource(stackframe, sourceMapConsumer, sourceCache) {\n        return new Promise(function(resolve, reject) {\n            var loc = sourceMapConsumer.originalPositionFor({\n                line: stackframe.lineNumber,\n                column: stackframe.columnNumber\n            });\n\n            if (loc.source) {\n                // cache mapped sources\n                var mappedSource = sourceMapConsumer.sourceContentFor(loc.source);\n                if (mappedSource) {\n                    sourceCache[loc.source] = mappedSource;\n                }\n\n                resolve(\n                    // given stackframe and source location, update stackframe\n                    new StackFrame({\n                        functionName: loc.name || stackframe.functionName,\n                        args: stackframe.args,\n                        fileName: loc.source,\n                        lineNumber: loc.line,\n                        columnNumber: loc.column\n                    }));\n            } else {\n                reject(new Error('Could not get original source for given stackframe and source map'));\n            }\n        });\n    }\n\n    /**\n     * @constructor\n     * @param {Object} opts\n     *      opts.sourceCache = {url: \"Source String\"} => preload source cache\n     *      opts.sourceMapConsumerCache = {/path/file.js.map: SourceMapConsumer}\n     *      opts.offline = True to prevent network requests.\n     *              Best effort without sources or source maps.\n     *      opts.ajax = Promise returning function to make X-Domain requests\n     */\n    return function StackTraceGPS(opts) {\n        if (!(this instanceof StackTraceGPS)) {\n            return new StackTraceGPS(opts);\n        }\n        opts = opts || {};\n\n        this.sourceCache = opts.sourceCache || {};\n        this.sourceMapConsumerCache = opts.sourceMapConsumerCache || {};\n\n        this.ajax = opts.ajax || _xdr;\n\n        this._atob = opts.atob || _atob;\n\n        this._get = function _get(location) {\n            return new Promise(function(resolve, reject) {\n                var isDataUrl = location.substr(0, 5) === 'data:';\n                if (this.sourceCache[location]) {\n                    resolve(this.sourceCache[location]);\n                } else if (opts.offline && !isDataUrl) {\n                    reject(new Error('Cannot make network requests in offline mode'));\n                } else {\n                    if (isDataUrl) {\n                        // data URLs can have parameters.\n                        // see http://tools.ietf.org/html/rfc2397\n                        var supportedEncodingRegexp =\n                            /^data:application\\/json;([\\w=:\"-]+;)*base64,/;\n                        var match = location.match(supportedEncodingRegexp);\n                        if (match) {\n                            var sourceMapStart = match[0].length;\n                            var encodedSource = location.substr(sourceMapStart);\n                            var source = this._atob(encodedSource);\n                            this.sourceCache[location] = source;\n                            resolve(source);\n                        } else {\n                            reject(new Error('The encoding of the inline sourcemap is not supported'));\n                        }\n                    } else {\n                        var xhrPromise = this.ajax(location, {method: 'get'});\n                        // Cache the Promise to prevent duplicate in-flight requests\n                        this.sourceCache[location] = xhrPromise;\n                        xhrPromise.then(resolve, reject);\n                    }\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Creating SourceMapConsumers is expensive, so this wraps the creation of a\n         * SourceMapConsumer in a per-instance cache.\n         *\n         * @param sourceMappingURL = {String} URL to fetch source map from\n         * @param defaultSourceRoot = Default source root for source map if undefined\n         * @returns {Promise} that resolves a SourceMapConsumer\n         */\n        this._getSourceMapConsumer = function _getSourceMapConsumer(sourceMappingURL, defaultSourceRoot) {\n            return new Promise(function(resolve, reject) {\n                if (this.sourceMapConsumerCache[sourceMappingURL]) {\n                    resolve(this.sourceMapConsumerCache[sourceMappingURL]);\n                } else {\n                    var sourceMapConsumerPromise = new Promise(function(resolve, reject) {\n                        return this._get(sourceMappingURL).then(function(sourceMapSource) {\n                            if (typeof sourceMapSource === 'string') {\n                                sourceMapSource = _parseJson(sourceMapSource.replace(/^\\)\\]\\}'/, ''));\n                            }\n                            if (typeof sourceMapSource.sourceRoot === 'undefined') {\n                                sourceMapSource.sourceRoot = defaultSourceRoot;\n                            }\n\n                            resolve(new SourceMap.SourceMapConsumer(sourceMapSource));\n                        }, reject);\n                    }.bind(this));\n                    this.sourceMapConsumerCache[sourceMappingURL] = sourceMapConsumerPromise;\n                    resolve(sourceMapConsumerPromise);\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, enhance function name and use source maps for a\n         * better StackFrame.\n         *\n         * @param {StackFrame} stackframe object\n         * @returns {Promise} that resolves with with source-mapped StackFrame\n         */\n        this.pinpoint = function StackTraceGPS$$pinpoint(stackframe) {\n            return new Promise(function(resolve, reject) {\n                this.getMappedLocation(stackframe).then(function(mappedStackFrame) {\n                    function resolveMappedStackFrame() {\n                        resolve(mappedStackFrame);\n                    }\n\n                    this.findFunctionName(mappedStackFrame)\n                        .then(resolve, resolveMappedStackFrame)\n                        ['catch'](resolveMappedStackFrame);\n                }.bind(this), reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, guess function name from location information.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.findFunctionName = function StackTraceGPS$$findFunctionName(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureStackFrameIsLegit(stackframe);\n                this._get(stackframe.fileName).then(function getSourceCallback(source) {\n                    var lineNumber = stackframe.lineNumber;\n                    var columnNumber = stackframe.columnNumber;\n                    var guessedFunctionName = _findFunctionName(source, lineNumber, columnNumber);\n                    // Only replace functionName if we found something\n                    if (guessedFunctionName) {\n                        resolve(new StackFrame({\n                            functionName: guessedFunctionName,\n                            args: stackframe.args,\n                            fileName: stackframe.fileName,\n                            lineNumber: lineNumber,\n                            columnNumber: columnNumber\n                        }));\n                    } else {\n                        resolve(stackframe);\n                    }\n                }, reject)['catch'](reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, seek source-mapped location and return new enhanced StackFrame.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.getMappedLocation = function StackTraceGPS$$getMappedLocation(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureSupportedEnvironment();\n                _ensureStackFrameIsLegit(stackframe);\n\n                var sourceCache = this.sourceCache;\n                var fileName = stackframe.fileName;\n                this._get(fileName).then(function(source) {\n                    var sourceMappingURL = _findSourceMappingURL(source);\n                    var isDataUrl = sourceMappingURL.substr(0, 5) === 'data:';\n                    var defaultSourceRoot = fileName.substring(0, fileName.lastIndexOf('/') + 1);\n\n                    if (sourceMappingURL[0] !== '/' && !isDataUrl && !(/^https?:\\/\\/|^\\/\\//i).test(sourceMappingURL)) {\n                        sourceMappingURL = defaultSourceRoot + sourceMappingURL;\n                    }\n\n                    return this._getSourceMapConsumer(sourceMappingURL, defaultSourceRoot).then(function(sourceMapConsumer) {\n                        return _extractLocationInfoFromSourceMapSource(stackframe, sourceMapConsumer, sourceCache)\n                            .then(resolve)['catch'](function() {\n                            resolve(stackframe);\n                        });\n                    });\n                }.bind(this), reject)['catch'](reject);\n            }.bind(this));\n        };\n    };\n}));\n"]}