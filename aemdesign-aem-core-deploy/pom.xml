<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- ====================================================================== -->
    <!-- P A R E N T    P R O J E C T    D E S C R I P T I O N                  -->
    <!-- ====================================================================== -->
    <parent>
        <groupId>aemdesign</groupId>
        <artifactId>aemdesign-aem-core</artifactId>
        <version>1.0.348</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <!-- ====================================================================== -->
    <!-- P R O J E C T    D E S C R I P T I O N                                 -->
    <!-- ====================================================================== -->

    <artifactId>aemdesign-aem-core-deploy</artifactId>
    <packaging>content-package</packaging>
    <name>AEM Design - Core - Deployment Package</name>
    <description>AEM package for deploying all packages as one</description>
    <version>1.0.348</version>

    <developers>
        <developer>
            <email>max@aem.design</email>
            <name>Max Barrass</name>
        </developer>
    </developers>

    <dependencies>
        <!-- TODO: Add a dependency for every module which should be deployed by the build pipeline -->
        <!--<dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${project.parent.artifactId}.[YOUR-MODULE-NAME]</artifactId>
            <type>zip</type>
            <version>${project.version}</version>
        </dependency>
        -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>aemdesign-aem-author</artifactId>
            <type>zip</type>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>aemdesign-aem-common</artifactId>
            <type>zip</type>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <!-- ====================================================================== -->
    <!-- B U I L D    D E F I N I T I O N                                       -->
    <!-- ====================================================================== -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <!-- ensure that the empty directories are copied -->
                <configuration>
                    <includeEmptyDirs>true</includeEmptyDirs>
                    <outputDirectory>${basedir}/target/classes</outputDirectory>
                    <resources>
                        <!-- define the resources that will go into the package -->
                        <resource>
                            <directory>src/content/jcr_root</directory>
                            <filtering>false</filtering>
                            <excludes>
                                <!-- exclude .vlt control files in the package -->
                                <exclude>**/.vlt</exclude>
                                <exclude>**/.vltignore</exclude>
                                <exclude>**/.gitignore</exclude>
                                <exclude>**/*.iml</exclude>
                                <exclude>**/.classpath</exclude>
                                <exclude>**/.project</exclude>
                                <exclude>**/.settings</exclude>
                                <exclude>**/.DS_Store</exclude>
                                <exclude>**/target/**</exclude>
                                <exclude>**/pom.xml</exclude>
                            </excludes>
                        </resource>
                    </resources>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-metainf-vault-resources-nodetypes</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/vault-work/META-INF/vault</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/content/META-INF/vault</directory>
                                    <includes>
                                        <include>nodetypes.cnd</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-metainf-vault-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/vault-work/META-INF/vault/definition</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/content/META-INF/vault/definition</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- <id>copy-testsupport</id> -->
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <includeArtifactIds>aem-maven-repository</includeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- ====================================================================== -->
            <!-- V A U L T   P A C K A G E   P L U G I N                                -->
            <!-- ====================================================================== -->
            <plugin>
                <groupId>com.day.jcr.vault</groupId>
                <artifactId>content-package-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <verbose>false</verbose>
                    <failOnError>true</failOnError>
                    <filterSource>src/content/META-INF/vault/filter.xml</filterSource>
                    <group>${package.group}</group>
                    <subPackages>
                        <subPackage>
                            <!-- include all packages -->
                            <type>zip</type>
                            <filter>true</filter>
                        </subPackage>
                    </subPackages>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>installdeploymentpackage</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.day.jcr.vault</groupId>
                        <artifactId>content-package-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-content-package</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>install</goal>
                                </goals>
                                <configuration>
                                    <targetURL>${package.uploadProtocol}://${crx.host}:${crx.port}/crx/packmgr/service.jsp</targetURL>
                                    <userId>${crx.username}</userId>
                                    <password>${crx.password}</password>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2</version>
                        <executions>
                            <execution>
                                <id>clean-jsp-clean</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>curl</executable>
                                    <arguments>
                                        <argument>-u</argument>
                                        <argument>${crx.username}:${crx.password}</argument>
                                        <argument>-H</argument>
                                        <argument>User-Agent:curl</argument>
                                        <argument>-X</argument>
                                        <argument>POST</argument>
                                        <argument>${package.uploadProtocol}://${crx.host}:${crx.port}/system/console/slingjsp</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
